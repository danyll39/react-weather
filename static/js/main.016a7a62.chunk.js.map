{"version":3,"sources":["context/GithubContext.js","components/Container.js","components/Form.js","components/Nav.js","components/User.js","components/ReposNav.js","components/Overview.js","components/Repos.js","components/Followers.js","components/ReposContainer.js","components/Hero.js","App.js","reportWebVitals.js","index.js"],"names":["GithubContext","createContext","GithubState","children","useState","user","setUser","repos","setRepos","followers","setFollowers","overview","setOverview","search","setSearch","error","setError","getData","fetch","then","res","json","data","message","getOverview","getRepos","getFollowers","Provider","value","getSearch","e","preventDefault","Container","className","Form","useContext","history","useHistory","useEffect","push","onSubmit","type","autoFocus","placeholder","onChange","target","Nav","User","src","avatar_url","alt","name","login","bio","location","blog","href","rel","ReposNav","activeClassName","to","Overview","id","map","item","index","html_url","language","Repos","repo","updated_at","Followers","follow","ReposContainer","path","component","Hero","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016a7a62.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\n\nexport const GithubContext = createContext()\n\nexport const GithubState = ({ children }) => {\n    const [user, setUser] = useState(null)\n    const [repos, setRepos] = useState(null)\n    const [followers, setFollowers] = useState(null)\n    const [overview, setOverview] = useState(null)\n    const [search, setSearch] = useState('')\n    const [error, setError] = useState('')\n\n\n    const getSearch = (e) => {\n        e.preventDefault()\n        getData()\n        setSearch('')\n\n    }\n\n\n    const getData = () => {\n        fetch(`https://api.github.com/users/${search}`)\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.message) {\n                    setUser(null)\n                    setRepos(null)\n                    setFollowers(null)\n                    setOverview(null)\n                    setError(\"User not found...\")\n                } else {\n                    setUser(data)\n                    getOverview()\n                    getRepos()\n                    getFollowers()\n                    setError(\"\")\n                }\n            })\n    }\n\n    const getRepos = () => {\n        fetch(`https://api.github.com/users/${search}/repos`)\n            .then((res) => res.json())\n            .then((data) => setRepos(data))\n    }\n\n\n    const getOverview = () => {\n        fetch(`https://api.github.com/users/${search}/repos?per_page=8&sort=asc`)\n            .then(res => res.json())\n            .then((data) => setOverview(data))\n    }\n    const getFollowers = () => {\n        fetch(`https://api.github.com/users/${search}/followers`)\n            .then(res => res.json())\n            .then(data => setFollowers(data))\n    }\n    return (\n        <GithubContext.Provider\n            value={{\n                getSearch,\n                user,\n                repos,\n                followers,\n                overview,\n                search,\n                setSearch,\n                error\n            }}\n        >\n            {children}\n        </GithubContext.Provider>\n    )\n}\n","import React from 'react'\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>\n\n\nexport default Container","import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router'\nimport { GithubContext } from '../context/GithubContext'\n\n\n\nconst Form = () => {\n    const { search, setSearch, getSearch } = useContext(GithubContext)\n    const history = useHistory()\n\n    useEffect(() => {\n        history.push('/overview')\n    },)\n    return (\n        <form onSubmit={getSearch}>\n            <input\n                type=\"text\"\n                autoFocus\n                placeholder=\"Search for a user...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n            />\n        </form>\n    )\n}\n\nexport default Form","import React from 'react'\nimport Container from './Container'\nimport Form from './Form'\n\nconst Nav = () => {\n    return (\n        <nav>\n            <Container>\n                <h1>Welcome to GitHub APP</h1>\n                <Form />\n            </Container>\n        </nav>\n\n    )\n}\n\nexport default Nav","import React, { useContext } from 'react'\nimport { GithubContext } from '../context/GithubContext'\n\nconst User = () => {\n    const { user } = useContext(GithubContext)\n    return (\n        <div className=\"user\">\n            <div className=\"userContainer\">\n                <div className=\"imgContainer\">\n                    <img src={user.avatar_url} alt=\"user\" />\n                </div>\n                <div className=\"userRow\">\n                    <div className=\"userInfo\">\n                        {user.name && <h2>{user.name}</h2>}\n                        {user.login && <h2>{user.login}</h2>}\n\n                    </div>\n                    {user.bio && (\n                        <div className=\"userDesc\">\n                            <p>{user.bio}</p>\n                        </div>\n                    )}\n                    <div className=\"userLinks\">\n                        {user.location && (\n                            <p>\n                                <i className=\"fas fa-map-marker-alt fa-sm\"></i>\n                                {user.location}\n                            </p>\n                        )}\n                        {user.blog && (\n                            <a\n                                href={`https://${user.blog}`}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fas fa-link fa-sm\"></i>\n                                {user.blog}\n                            </a>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default User","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\n\nconst ReposNav = () => {\n    return (\n        <div activeClassName=\"reposNav\" className=\"reposNav\">\n            <NavLink activeClassName=\"active\" to=\"/overview\">Overview</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/repos\">Repos</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/followers\">Followers</NavLink>\n\n\n        </div>\n    )\n}\n\n\nexport default ReposNav","import React, { useContext } from 'react'\nimport { GithubContext } from '../context/GithubContext'\n\n\n\n\nconst Overview = () => {\n    const { overview } = useContext(GithubContext)\n    let id = 0\n    return (\n        <div className=\"overviewContainer\">\n            {overview && overview.map((item, index) => (\n                <a\n                    key={index}\n                    href={item.html_url}\n                    target=\"_blank\"\n                    rel=\"noreopener noreferrer\"\n                >\n                    <div className={\"overview overview-\" + ++id}>\n                        {item.name && <h2>{item.name}</h2>}\n                        {item.language && (\n                            <p>\n                                <span></span>\n                                {item.language}\n                            </p>\n                        )}\n                    </div>\n                </a>\n            ))}\n        </div>\n\n    )\n}\n\n\nexport default Overview","import React, { useContext } from 'react'\nimport { GithubContext } from '../context/GithubContext'\n\nconst Repos = () => {\n    const { repos } = useContext(GithubContext)\n    return (\n        <>\n            {repos && repos.map((repo, index) => (\n                <a\n                    key=\"index\"\n                    href={repo.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"reposWrap\"\n                >\n                    <div className=\"repos\">\n                        {repo.name && <p>{repo.name}</p>}\n                        <div className=\"repoInfo\">\n                            {repo.language && (\n                                <p>\n                                    <span></span>\n                                    {repo.language}\n                                </p>\n                            )}\n                            {repo.updated_at && <p>{repo.updated_at}</p>}\n                        </div>\n                    </div>\n                </a>\n\n            ))}\n        </>\n\n    )\n}\n\nexport default Repos","import React, { useContext } from 'react'\nimport { GithubContext } from '../context/GithubContext'\n\nconst Followers = () => {\n    const { followers } = useContext(GithubContext)\n    return (\n        <>\n            {followers && followers.map((follow, index) => (\n                <a\n                    key={index}\n                    href={follow.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"followersContainer\"\n                >\n                    <div className=\"followers\">\n                        <img src={follow.avatar_url} alt=\"follower\" />\n                        <p>{follow.login}</p>\n                    </div>\n                </a>\n            ))}\n        </>\n\n\n\n    )\n}\n\nexport default Followers","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Overview from './Overview'\nimport Repos from './Repos'\nimport Followers from './Followers'\n\n\nconst ReposContainer = () => {\n    return (\n        <div className=\"reposContainer\">\n\n            <Route path=\"/overview\" component={Overview} />\n            <Route path=\"/repos\" component={Repos} />\n            <Route path=\"/followers\" component={Followers} />\n        </div>\n    )\n}\n\n\nexport default ReposContainer","import React, { useContext } from 'react'\nimport { GithubContext } from '../context/GithubContext'\nimport Container from './Container'\nimport Nav from './Nav'\nimport User from './User'\nimport ReposNav from './ReposNav'\nimport ReposContainer from './ReposContainer'\n\nconst Hero = () => {\n    const { user, error } = useContext(GithubContext)\n    return (\n        <section className=\"hero\">\n            <Nav />\n            <Container>\n                {user ? (\n                    <>\n                        <User />\n                        <div className=\"wrapper\">\n                            <ReposNav />\n                            <ReposContainer />\n                        </div>\n                    </>\n\n                ) : (\n                        <p className=\"noUser\">{error}</p>\n                    )}\n            \n            </Container>\n        </section>\n    )\n}\nexport default Hero\n","import React from 'react'\nimport { GithubState } from \"./context/GithubContext\"\nimport Hero from './components/Hero'\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <GithubState>\n      <Router>\n        < Hero />\n      </Router>\n    </GithubState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}